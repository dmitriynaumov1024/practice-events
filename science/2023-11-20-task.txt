Fullstack Task

Розробити Фулстек-застосунок для перегляду та відслідковування івентів.
Інтерфейс застосунку повинен мати закінчений вигляд, містити типовий хедер/футер.


FrontEnd

- Головна сторінка - перегляд наявних івентів. На кожному івенті передбачити кнопку “Піду”/”Не піду” (в ідеалі в подібній системі має бути авторизація, але з урахуванням часових рамок, вона не потрібна. *Натомість при голосуванні вводити імейл, наприклад, у вспливаючому вікні). Додати пошук івентів по відомих гостях та фільтрацію по категоріях. При натисканні на івент відображається сторінка з докладним описом івенту.
- Сторінка з описом конкретного івента - містить інфо з докладним описом івенту і кількістю гостів, що проголосували “Піду”/”Не піду”.
- Сторінка з календарем, де на календарі відображаються заголовки всіх подій місяця, календар має давати змогу обирати рік і місяць. Події в календарі підсвічувати якимось кольором різного степеня інтенсивності в залежності від того, скільки людей планує прийти: чим більше, тим яскравіше.
- Сторінка зі статистикою за рік: передбачити отримання різного роду статистики по івентах, наприклад:
    - діаграма по кількості івентів в кожному місяці
    - діаграма по кількості відвідувачів, хто планує/не планує іти на івенти в різних місяцях.
    - додати фільтрацію для отримання аналогічної статистики для івентів певної категорії тощо

Технології:

- React (наприклад, збірка Create React App)
- для роутингу, наприклад: React Router
- бібліотека для діаграм на вибір
За бажанням можна використовувати інший стек технологій для веб-застосунку або реалізувати у вигляді мобільного застосунку, але тоді буде обмежена можливість отримати Code Review.


BackEnd

Інфо про івенти зберігати в базі даних. Івенти можуть відноситися до різних категорій. Інформацію про івенти, тестові дані щодо голосування по відвідуванню подій (*та частково користувачів) внести сідами. 
Передбачити наступні ендпойнти:
- отримання даних по івентах (з можливістю фільтрації і пагінації)
- отримання розгорнутої інформації по конкретному івенту
- додавання інформації про дані користувача, якщо вказаного при голосуванні імейлу не існує
- відправка нагадування користувачу при реєстрації на івент
- розсилка на імейли користувачам, які збираються на івент, нагадування про івент за, наприклад, годину до нього
- додавання інформації по голосуванню користувача “Піду”/”Не піду”
інші за необхідності

Технології:

- Node.js, express
- СУБД реляційна PostgreSQL / MySQL або MongoDB
- для роботи з базою ORM sequelize / ODM Mongoose або більш низькорівневі бібліотеки
- бібліотека для відправлення повідомлення на імейл
За бажанням можна використовувати інший стек технологій, але тоді буде обмежена можливість отримати Code Review.
